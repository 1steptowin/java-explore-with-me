CREATE TABLE IF NOT EXISTS categories ( category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(32), CONSTRAINT pk_categories PRIMARY KEY(category_id), CONSTRAINT uq_category_name UNIQUE(name) );

CREATE TABLE IF NOT EXISTS users ( user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(32), email VARCHAR (64), CONSTRAINT pk_users PRIMARY KEY(user_id), CONSTRAINT uq_users_name UNIQUE(name) );

CREATE TABLE IF NOT EXISTS locations ( location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, lat DOUBLE PRECISION, lon DOUBLE PRECISION, CONSTRAINT pk_locations PRIMARY KEY(location_id) );

CREATE TABLE IF NOT EXISTS events ( event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, title VARCHAR(64), description VARCHAR(4096), annotation VARCHAR(1024), event_date TIMESTAMP WITHOUT TIME ZONE, created_on TIMESTAMP WITHOUT TIME ZONE, published_on TIMESTAMP WITHOUT TIME ZONE, paid BOOLEAN, request_moderation BOOLEAN, event_status VARCHAR(16), participation_limit INTEGER, location_id BIGINT NOT NULL, category_id BIGINT, user_id BIGINT, CONSTRAINT pk_events PRIMARY KEY(event_id), CONSTRAINT fk_event_to_location FOREIGN KEY(location_id) REFERENCES locations (location_id), CONSTRAINT fk_events_to_categories FOREIGN KEY(category_id) REFERENCES categories (category_id), CONSTRAINT fk_events_to_users FOREIGN KEY(user_id) REFERENCES users(user_id) );

CREATE TABLE IF NOT EXISTS requests ( request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, created TIMESTAMP WITHOUT TIME ZONE, request_status VARCHAR(16), event_id BIGINT, user_id BIGINT, CONSTRAINT pk_requests PRIMARY KEY(request_id), CONSTRAINT fk_request_to_event FOREIGN KEY(event_id) REFERENCES events(event_id), CONSTRAINT fk_request_to_user FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE IF NOT EXISTS compilations ( compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, title VARCHAR(32), pinned BOOLEAN, CONSTRAINT pk_compilations PRIMARY KEY(compilation_id) );

CREATE TABLE IF NOT EXISTS compilations_events ( compilations_events_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, event_id BIGINT, compilation_id BIGINT, CONSTRAINT pk_compilations_events PRIMARY KEY(compilations_events_id), CONSTRAINT fk_compilations_events_to_events FOREIGN KEY(event_id) REFERENCES events(event_id), CONSTRAINT fk_compilations_events_to_compilations FOREIGN KEY(compilation_id) REFERENCES compilations(compilation_id) );